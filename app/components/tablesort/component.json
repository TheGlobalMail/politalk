{
  "name": "tablesort",
  "version": "0.2.0",
  "main": "tablesort.js",
  "readme": "# tablesort.js\n\nTablesort is a small & simple sorting component for tables written in Javascript. It has no dependencies and should have no interference with other libraries.\n\n## Basic usage\n\n``` html\n<script src='tablesort.min.js'></script>\n<script>\n  new Tablesort(document.getElementById('table-id'));\n</script>\n```\n## Sort Types\n\n* strings\n* numbers\n* currency\n* Basic dates in `dd/mm/yy` or `dd-mm-yy` format. Years can be 4 digits. Days and Months can be 1 or 2 digits.\n\n## Additional options\n\n__Ascending/Descending__\nYou can pass in options as a second parameter. Currently one option is supported: `descending: true`. By default, sort is set to ascending.\n\n``` html\nnew Tablesort(document.getElementById('table-id'), {\n  descending: true\n});\n```\n\n__Exclude columns or rows__\nFor columns or rows that do not require sorting, you can add a class of `no-sort` to a columns `th` or a `tr` element.\n``` html\n<th class='no-sort'>Name</th>\n\n<tr class='no-sort'>\n  <td>1</td>\n  <td>Gonzo the Great</td>\n  <td>12-2-70</td>\n  <td>Radishes</td>\n  <td>$0.63</td>\n</tr>\n```\n\n__Refresh sort on appended data__\nTablesort supports sorting when new data has been added. Simply call the refresh method.\n\n``` js\nvar table = document.getElementById('table-id');\nvar sort = new Tablesort(table);\n\n// Make some Ajax request to fetch new data and on success:\nsort.refresh();\n```\n\n[See homepage for example](http://tristen.ca/tablesort/demo/#refresh)\n\n## Ender support\nAdd `tablesort` as an internal chain method to your [Ender](http://ender.no.de) compilation.\n\n``` shell\n$ ender add tablesort\n```\n\nUse it:\n\n``` js\n$('.table').tablesort();\n```\n\n## Default style\nAdd the styling below to your CSS or roll with your own.\n\n``` css\nth.sort-header {\n  cursor:pointer;\n  }\nth.sort-header::-moz-selection,\nth.sort-header::selection {\n  background:transparent;\n  }\ntable th.sort-header:after {\n  content:'';\n  float:right;\n  margin-top:7px;\n  border-width:0 4px 4px;\n  border-style:solid;\n  border-color:#404040 transparent;\n  visibility:hidden;\n  }\ntable th.sort-header:hover:after {\n  visibility:visible;\n  }\ntable th.sort-up:after,\ntable th.sort-down:after,\ntable th.sort-down:hover:after {\n  visibility:visible;\n  opacity:0.4;\n  }\ntable th.sort-up:after {\n  border-bottom:none;\n  border-width:4px 4px 0;\n  }\n```\n\n## Building\n\nDevelopers can rebuild the minified library by running:\n\n``` bash\n  npm install --dev\n  make\n```\n\n## TODOs\n\n* Tests\n* Pass in an options object to:\n  - Choose which row to begin sorting on.\n  - EventListener to rebuild the table in Ender.\n\n## Licence\n\nMIT\n\n## Bugs?\n\n[Create an issue](https://github.com/tristen/tablesort/issues)\n\n",
  "readmeFilename": "README.md",
  "_id": "tablesort@0.2.0",
  "description": "Tablesort is a small & simple sorting component for tables written in Javascript. It has no dependencies and should have no interference with other libraries.",
  "repository": {
    "type": "git",
    "url": "git://github.com/cobbweb/tablesort.git"
  }
}